// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Routine.Api.Data;

namespace Routine.Api.Migrations
{
    [DbContext(typeof(RoutineDbContext))]
    [Migration("20200209063625_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("Routine.Api.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Introduction")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4aee42bd-0109-4f17-af5c-77cf9f536341"),
                            Introduction = "Great Company",
                            Name = "Microsoft"
                        },
                        new
                        {
                            Id = new Guid("c667b0f9-3b04-40e4-a4b1-06557516a517"),
                            Introduction = "No Evil Company",
                            Name = "Google"
                        },
                        new
                        {
                            Id = new Guid("f3d915ee-689e-4a6d-b20b-b4da28ae2ea2"),
                            Introduction = "Fubao Company",
                            Name = "Alipapa"
                        });
                });

            modelBuilder.Entity("Routine.Api.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeNo")
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12894822-d70f-4b56-a192-6bbb03f5d095"),
                            CompanyId = new Guid("4aee42bd-0109-4f17-af5c-77cf9f536341"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1999, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            EmployeeNo = "MSFT01",
                            FirstName = "Saken",
                            Gender = 1,
                            LastName = "Tam"
                        },
                        new
                        {
                            Id = new Guid("2146bf8e-df32-421f-9ab6-452b444d0edc"),
                            CompanyId = new Guid("c667b0f9-3b04-40e4-a4b1-06557516a517"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1998, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            EmployeeNo = "GG01",
                            FirstName = "Nick",
                            Gender = 1,
                            LastName = "Young"
                        },
                        new
                        {
                            Id = new Guid("9ebfe079-a4ec-4047-b434-6eb37a9fcb4c"),
                            CompanyId = new Guid("f3d915ee-689e-4a6d-b20b-b4da28ae2ea2"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1997, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            EmployeeNo = "ALPP01",
                            FirstName = "Yougtee",
                            Gender = 1,
                            LastName = "Tam"
                        },
                        new
                        {
                            Id = new Guid("7017439b-a357-404c-a831-65c0f4985af8"),
                            CompanyId = new Guid("4aee42bd-0109-4f17-af5c-77cf9f536341"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1993, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            EmployeeNo = "MSFT02",
                            FirstName = "Sara",
                            Gender = 1,
                            LastName = "Wong"
                        });
                });

            modelBuilder.Entity("Routine.Api.Entities.Employee", b =>
                {
                    b.HasOne("Routine.Api.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
